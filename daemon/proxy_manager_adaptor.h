/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c ProxyManagerAdaptor -a proxy_manager_adaptor.h proxy_manager_interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef PROXY_MANAGER_ADAPTOR_H_1314296685
#define PROXY_MANAGER_ADAPTOR_H_1314296685

#include <QtCore/QObject>
#include <QtCore/QMetaObject>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include "proxymanager_daemon.h"

/*
 * Adaptor class for interface dk.surlykke.it.ProxyManager
 */
class ProxyManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "dk.surlykke.it.ProxyManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"dk.surlykke.it.ProxyManager\">\n"
"    <method name=\"NetworkSignature\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"signature\"/>\n"
"    </method>\n"
"    <method name=\"ConfigureProxy\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"use_proxy\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"host\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"port\"/>\n"
"      <arg direction=\"in\" type=\"as\" name=\"host_exceptions\"/>\n"
"      <arg direction=\"in\" type=\"as\" name=\"domain_exceptions\"/>\n"
"    </method>\n"
"    <signal name=\"NetworkChanged\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"signature\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    ProxyManagerAdaptor(ProxyManagerDaemon *app);
    virtual ~ProxyManagerAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void ConfigureProxy(bool use_proxy, const QString &host, ushort port, const QStringList &host_exceptions, const QStringList &domain_exceptions);
    QString NetworkSignature();
Q_SIGNALS: // SIGNALS
    void NetworkChanged(const QString &signature);

private:

};

#endif
/*
 * Implementation of adaptor class ProxyManagerAdaptor
 */

ProxyManagerAdaptor::ProxyManagerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ProxyManagerAdaptor::~ProxyManagerAdaptor()
{
    // destructor
}

void ProxyManagerAdaptor::ConfigureProxy(bool use_proxy, const QString &host, ushort port, const QStringList &host_exceptions, const QStringList &domain_exceptions)
{
    // handle method call dk.surlykke.it.ProxyManager.ConfigureProxy
    QMetaObject::invokeMethod(parent(), "ConfigureProxy", Q_ARG(bool, use_proxy), Q_ARG(QString, host), Q_ARG(ushort, port), Q_ARG(QStringList, host_exceptions), Q_ARG(QStringList, domain_exceptions));
}

QString ProxyManagerAdaptor::NetworkSignature()
{
    // handle method call dk.surlykke.it.ProxyManager.NetworkSignature
    QString signature;
    QMetaObject::invokeMethod(parent(), "NetworkSignature", Q_RETURN_ARG(QString, signature));
    return signature;
}

